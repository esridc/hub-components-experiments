import{r as t,c as i,h as s,H as e,g as a}from"./p-d703c309.js";import{T as h,g as n,H as r}from"./p-78a0ee67.js";import{g as o}from"./p-e14d02bd.js";import{g as c,d as l,a as d,b as m}from"./p-b896c2af.js";import{g as D}from"./p-927ebebc.js";import"./p-de4d1d1b.js";import"./p-dd143ab9.js";import"./p-0b4cf4f0.js";let p=class{constructor(s){t(this,s),this.calciteDatePickerChange=i(this,"calciteDatePickerChange",7),this.calciteDatePickerRangeChange=i(this,"calciteDatePickerRangeChange",7),this.intlPrevMonth=h.prevMonth,this.intlNextMonth=h.nextMonth,this.locale=document.documentElement.lang||"en",this.scale="m",this.range=!1,this.proximitySelectionDisabled=!1,this.keyUpHandler=t=>{"Escape"===D(t.key)&&this.reset()},this.monthHeaderSelectChange=t=>{const i=new Date(t.detail);this.range?("end"===this.activeRange?this.activeEndDate=i:this.activeStartDate=i,this.mostRecentRangeValue=i):this.activeDate=i},this.monthActiveDateChange=t=>{const i=new Date(t.detail);this.range?("end"===this.activeRange?this.activeEndDate=i:this.activeStartDate=i,this.mostRecentRangeValue=i):this.activeDate=i},this.monthHoverChange=t=>{if(!this.startAsDate)return void(this.hoverRange=void 0);const i=new Date(t.detail);if(this.hoverRange={focused:this.activeRange||"start",start:this.startAsDate,end:this.endAsDate},this.proximitySelectionDisabled)this.endAsDate?this.hoverRange=void 0:i<this.startAsDate?this.hoverRange={focused:"start",start:i,end:this.startAsDate}:(this.hoverRange.end=i,this.hoverRange.focused="end");else if(this.endAsDate){const t=c(i,this.startAsDate),s=c(i,this.endAsDate);s>0?(this.hoverRange.end=i,this.hoverRange.focused="end"):t<0||t>s?(this.hoverRange.start=i,this.hoverRange.focused="start"):(this.hoverRange.end=i,this.hoverRange.focused="end")}else i<this.startAsDate?this.hoverRange={focused:"start",start:i,end:this.startAsDate}:(this.hoverRange.end=i,this.hoverRange.focused="end")},this.monthMouseOutChange=()=>{this.hoverRange&&(this.hoverRange=void 0)},this.reset=()=>{var t,i,s,e,a,h;!Array.isArray(this.valueAsDate)&&this.valueAsDate&&(null===(t=this.valueAsDate)||void 0===t?void 0:t.getTime())!==(null===(i=this.activeDate)||void 0===i?void 0:i.getTime())&&(this.activeDate=new Date(this.valueAsDate)),this.startAsDate&&(null===(s=this.startAsDate)||void 0===s?void 0:s.getTime())!==(null===(e=this.activeStartDate)||void 0===e?void 0:e.getTime())&&(this.activeStartDate=new Date(this.startAsDate)),this.endAsDate&&(null===(a=this.endAsDate)||void 0===a?void 0:a.getTime())!==(null===(h=this.activeEndDate)||void 0===h?void 0:h.getTime())&&(this.activeEndDate=new Date(this.endAsDate))},this.monthDateChange=t=>{const i=new Date(t.detail);if(!this.range)return this.value=l(i),void(this.activeDate=i);if(!this.startAsDate||!this.endAsDate&&i<this.startAsDate)this.startAsDate&&this.setEndDate(new Date(this.startAsDate)),"end"==this.activeRange?this.setEndDate(i):this.setStartDate(i);else if(this.endAsDate)if(this.proximitySelectionDisabled)this.setStartDate(i),this.endAsDate=this.activeEndDate=this.end=void 0;else if(this.activeRange)"end"==this.activeRange?this.setEndDate(i):this.setStartDate(i);else{const t=c(i,this.startAsDate),s=c(i,this.endAsDate);0===s||t<0?this.setStartDate(i):0===t||s<0?this.setEndDate(i):t<s?this.setStartDate(i):this.setEndDate(i)}else this.setEndDate(i)}}handleValueAsDate(t){!Array.isArray(t)&&t&&t!==this.activeDate&&(this.activeDate=t,this.calciteDatePickerChange.emit(t))}handleRangeChange(){const{startAsDate:t,endAsDate:i}=this;this.activeEndDate=i,this.activeStartDate=t}connectedCallback(){Array.isArray(this.value)?(this.valueAsDate=this.value.map((t=>d(t))),this.start=this.value[0],this.end=this.value[1]):this.value&&(this.valueAsDate=d(this.value)),this.start&&this.setStartAsDate(d(this.start)),this.end&&this.setEndAsDate(d(this.end)),this.min&&(this.minAsDate=d(this.min)),this.max&&(this.maxAsDate=d(this.max))}async componentWillLoad(){await this.loadLocaleData()}render(){var t;const i=m(this.range?this.startAsDate:this.valueAsDate,this.minAsDate,this.maxAsDate);let a=this.range?this.getActiveStartDate(i,this.minAsDate,this.maxAsDate):this.getActiveDate(i,this.minAsDate,this.maxAsDate);const h=this.range?m(this.endAsDate,this.minAsDate,this.maxAsDate):null,n=this.getActiveEndDate(h,this.minAsDate,this.maxAsDate);"end"!==this.activeRange&&("end"!==(null===(t=this.hoverRange)||void 0===t?void 0:t.focused)||this.proximitySelectionDisabled&&!h)||!n||(a=n),this.range&&this.mostRecentRangeValue&&(a=this.mostRecentRangeValue);const r=this.range&&this.activeRange?"start"===this.activeRange?this.minAsDate:i||this.minAsDate:this.minAsDate,c=this.range&&this.activeRange&&"start"===this.activeRange&&h||this.maxAsDate,l=o(this.el);return s(e,{onBlur:this.reset,onKeyUp:this.keyUpHandler,role:"application"},this.renderCalendar(a,l,c,r,i,h))}valueHandler(t){Array.isArray(t)?(this.valueAsDate=t.map((t=>d(t))),this.start=t[0],this.end=t[1]):t&&(this.valueAsDate=d(t),this.start="",this.end="")}startWatcher(t){this.setStartAsDate(d(t))}endWatcher(t){this.setEndAsDate(d(t))}async loadLocaleData(){const{locale:t}=this;this.localeData=await n(t)}renderCalendar(t,i,e,a,h,n){return this.localeData&&[s("calcite-date-picker-month-header",{activeDate:t,dir:i,headingLevel:this.headingLevel||r,intlNextMonth:this.intlNextMonth,intlPrevMonth:this.intlPrevMonth,localeData:this.localeData,max:e,min:a,onCalciteDatePickerSelect:this.monthHeaderSelectChange,scale:this.scale,selectedDate:"end"===this.activeRange?n:h||new Date}),s("calcite-date-picker-month",{activeDate:t,dir:i,endDate:this.range?n:void 0,hoverRange:this.hoverRange,localeData:this.localeData,max:e,min:a,onCalciteDatePickerActiveDateChange:this.monthActiveDateChange,onCalciteDatePickerHover:this.monthHoverChange,onCalciteDatePickerMouseOut:this.monthMouseOutChange,onCalciteDatePickerSelect:this.monthDateChange,scale:this.scale,selectedDate:"end"===this.activeRange?n:h,startDate:this.range?h:void 0})]}setStartAsDate(t,i){this.startAsDate=t,this.mostRecentRangeValue=this.startAsDate,i&&this.calciteDatePickerRangeChange.emit({startDate:t,endDate:this.endAsDate})}setEndAsDate(t,i){this.endAsDate=t,this.mostRecentRangeValue=this.endAsDate,i&&this.calciteDatePickerRangeChange.emit({startDate:this.startAsDate,endDate:t})}setEndDate(t){this.end=l(t),this.setEndAsDate(t,!0),this.activeEndDate=t}setStartDate(t){this.start=l(t),this.setStartAsDate(t,!0),this.activeStartDate=t}getActiveDate(t,i,s){return m(this.activeDate,i,s)||t||m(new Date,i,s)}getActiveStartDate(t,i,s){return m(this.activeStartDate,i,s)||t||m(new Date,i,s)}getActiveEndDate(t,i,s){return m(this.activeEndDate,i,s)||t||m(new Date,i,s)}static get assetsDirs(){return["assets"]}get el(){return a(this)}static get watchers(){return{valueAsDate:["handleValueAsDate"],startAsDate:["handleRangeChange"],endAsDate:["handleRangeChange"],value:["valueHandler"],start:["startWatcher"],end:["endWatcher"],locale:["loadLocaleData"]}}};p.style="@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:300ms}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}:root{--calcite-popper-transition:150ms ease-in-out}:host([hidden]){display:none}:host{display:inline-block;vertical-align:top;width:100%;position:relative;overflow:visible;border-radius:0;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-2);background-color:var(--calcite-ui-foreground-1)}:host([scale=s]){max-width:216px}:host([scale=m]){max-width:286px}:host([scale=l]){max-width:398px}";export{p as calcite_date_picker}